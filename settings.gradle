// publish build scans from CI builds
plugins {
    id "com.gradle.enterprise" version "3.18"
}

gradleEnterprise {
    server = "https://ge.solutions-team.gradle.com"
    buildScan {
        boolean ci = System.getenv('CI') as boolean
        publishAlwaysIf(true)
        uploadInBackground = !ci
    }
}

rootProject.name = 'buildship'

include ':org.gradle.toolingapi'
include ':org.eclipse.buildship.compat'
include ':org.eclipse.buildship.core'
include ':org.eclipse.buildship.ui'
include ':org.eclipse.buildship.feature'
include ':org.eclipse.buildship.site'
include ':org.eclipse.buildship.branding'
include ':org.eclipse.buildship.core.test'
include ':org.eclipse.buildship.ui.test'
include ':org.eclipse.buildship.testdependencies'
if (properties['latest'] == 'true') {
    include ':org.eclipse.buildship.gradleprop.provider'
    include ':org.eclipse.buildship.gradleprop.ls'
    include ':org.eclipse.buildship.gradleprop.feature'
    include ':org.eclipse.buildship.kotlindsl.provider'
    include ':org.eclipse.buildship.kotlindsl.feature'
    include ':org.eclipse.buildship.gradleprop.test'
}

include ':org.eclipse.buildship.oomph'
include ':org.eclipse.buildship.oomph.edit'
include ':org.eclipse.buildship.oomph.feature'
include ':org.eclipse.buildship.oomph.test'

// Use local build cache on developer machine and remote cache on CI
String cacheUrl = System.getProperty('gradle.cache.remote.url', '')
String cacheUser = System.getProperty('gradle.cache.remote.username', '')
String cachePassword = System.getProperty('gradle.cache.remote.password', '')
boolean remoteCacheAvailable = cacheUrl != '' && cacheUrl != '' && cachePassword != ''

buildCache {
    local {
        enabled = !remoteCacheAvailable
    }

    if (remoteCacheAvailable) {
        remote(HttpBuildCache) {
            url = cacheUrl
            credentials {
                username = cacheUser
                password = cachePassword
                push = true
            }
        }
    }
}
